<%- include('../partials/_header') %>
<%- include('../partials/style') %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    .product-card {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
        border-bottom: 1px solid #f1f1f1;
        padding-bottom: 10px;
    }

    .product-card img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        margin-right: 15px;
        border-radius: 5px;
    }

    .product-card .product-info {
        flex-grow: 1;
    }

    .product-card .product-info h6 {
        margin: 0;
        color: black;
    }

    .product-card .product-info p {
        margin: 5px 0;
        color: #555;
    }

    .modal-header {
        padding: 15px;
    }

    .modal-footer {
        padding: 10px;
        justify-content: center;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
    }
</style>

<body>
    <%- include('../partials/sidebar') %>
    <%- include('../partials/topbar') %>
    <div class="content p-4" id="main-content">
        <div class="container-fluid mt-5 pt-5">
            <div id="products" class="section-details active">
                <h2>order Management</h2>
                <p>Manage orders here</p>
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <!-- Search Form -->
                    <form action="/admin/orders" method="GET" class="d-flex align-items-center" style="flex: 1;">
                        <input type="text" name="search" class="form-control" style="width: 30%;" placeholder="Search  orders" value="<%= searchQuery %>">
                        <button type="submit" class="btn btn-primary ms-2" style="border-color: white;">Search</button>
                    </form>
                </div>

                <div class="table-responsive">
                    <% if (orders.length > 0) { %>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4>Order Ledger</h4>
                            <button class="btn btn-primary" onclick="generateLedger()">Download Ledger</button>
                        </div>
                        <table class="table table-striped mt-4">
                            <thead>
                                <tr>
                                    <th>s.no</th>
                                    <th>Order Id</th>
                                    <th>User Name</th>
                                    <th>Product Name</th>
                                    <th>Total Price</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders.forEach((order, index) => { %>
                                    <tr>
                                        <td><%= (currentPage - 1) * 10 + index + 1 %></td>
                                        <td><%= order._id %></td>
                                        <td><%= order.userId ? order.userId.name : 'N/A' %></td> 
                                        <td>
                                            <% order.products.forEach(p => { %>
                                                    <%= p.productId ? (p.productId.pname.length > 20 ? p.productId.pname.slice(0, 20) + '...' : p.productId.pname) : 'Unknown Product' %><br>
                                            <% }) %>
                                        </td>
                                        
                                        <td>â‚¹<%= order.totalPrice.toFixed(2) %></td>

                                        <td>
                                            <% if (order.returnRequestStatus) { %>
                                                <button class="btn btn-sm <%= order.returnRequestStatus === 'Return accepted' ? 'btn-success' : 'btn-warning' %>" disabled>
                                                    <%= order.returnRequestStatus.charAt(0).toUpperCase() + order.returnRequestStatus.slice(1) %>
                                                </button>
                                            <% } else { %>
                                                <select 
                                                    class="form-select" 
                                                    onchange="updateOrderStatus('<%= order._id %>', this.value)" 
                                                    <%= (order.orderStatus === 'Delivered' || order.orderStatus === 'Cancelled') ? 'disabled' : '' %>
                                                >
                                                    <% ['Pending', 'Processing', 'Shipped', 'Delivered'].forEach(status => { %>
                                                        <option value="<%= status %>" <%= order.orderStatus === status ? 'selected' : '' %>><%= status %></option>
                                                    <% }) %>
                                                </select>
                                            <% } %>
                                        </td>
                                        
                                        
                                        <td>
                                            <% let viewRequestButtonDisplayed = false; %> 
                                            <% order.products.forEach(product => { %>
                                                <% if (product.returnRequestStatus == 'Request Pending' && !viewRequestButtonDisplayed) { %>
                                                    <button class="btn btn-sm btn-info" onclick="viewReturnAProductRequest('<%= order._id %>', '<%= product.productId._id%>')">
                                                        View Request
                                                    </button>
                                                    <% viewRequestButtonDisplayed = true; %>
                                                <% } %>
                                            <% }); %>
                                        
                                            <% if (!order.products.some(product => product.returnRequestStatus === 'Request Pending')) { %>
                                                <% if (order.returnRequestStatus === "Request Pending") { %>
                                                    <button class="btn btn-sm btn-info" onclick="viewReturnRequest('<%= order._id %>')">View Request</button>
                                                <% } else { %>
                                                    <button class="btn btn-sm btn-danger" onclick="cancelOrder('<%= order._id %>')" 
                                                            <%= order.returnRequestStatus || order.orderStatus === 'Delivered' || order.orderStatus === 'Cancelled' ? 'disabled' : '' %>>
                                                        Cancel
                                                    </button>
                                                <% } %>
                                            <% } %>
                                        </td>
                                        
                                        <td>
                                            <button class="btn btn-sm btn-primary" onclick="viewOrderDetails('<%= order._id %>')">View Details</button>
                                        </td>
                                        
                                        
                                        </tr>

                                    <div id="returnRequestModal" class="modal" tabindex="-1" role="dialog">
                                    <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                        <h5 class="modal-title " style="color: black;">Return Request message</h5>
                                        <button type="button" class="close" onclick="closeReturnRequestModal()" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        </div>
                                        <div class="modal-body">
                                        <p style="color: black;" id="returnRequestMessage"><%= order.returnRequest %></p>
                                        </div>
                                        <div class="modal-footer">
                                        <button type="button" class="btn btn-success" data-id="<%= order._id %>"  onclick="acceptReturnRequest()">Accept</button>
                                        <button type="button" class="btn btn-danger" onclick="rejectReturnRequest('<%= order._id %>')">Reject</button>
                                        <button type="button" class="btn btn-secondary" onclick="closeReturnRequestModal()">Close</button>
                                        </div>
                                    </div>
                                    </div>
                                    </div>


                                    <div id="returnAProductRequestModal" class="modal" tabindex="-1" role="dialog">
                                        <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                            <h5 class="modal-title " style="color: black;">Return Request message</h5>
                                            <button type="button" class="close" onclick="closeReturnRequestModal()" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                            </div>
                                            <div class="modal-body">
                                            <p style="color: black;" id="returnAProductRequestMessage"></p>
                                            </div>
                                            <div class="modal-footer">
                                            <button type="button" class="btn btn-success" data-id="<%= order._id %>"  onclick="acceptAProductReturnRequest('<%= order._id %>','<%= order.products.productId %>')">Accept</button>
                                            <button type="button" class="btn btn-danger" onclick="rejectAProductReturnRequest('<%= order._id %>','<%= order.products.productId %>')">Reject</button>
                                            <button type="button" class="btn btn-secondary" onclick="closeReturnRequestModal()">Close</button>
                                            </div>
                                        </div>
                                        </div>
                                        </div>


                                        <div id="orderDetailsModal" class="modal" tabindex="-1" role="dialog" style="overflow-y: auto;">
                                            <div class="modal-dialog modal-lg" role="document">
                                                <div class="modal-content rounded-lg">
                                                    <!-- Modal Header -->
                                                    <div class="modal-header bg-dark text-white">
                                                        <h5 class="modal-title">Order Details</h5>
                                                        <button type="button" class="close text-white" onclick="closeOrderDetailsModal()" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                        
                                                    <!-- Modal Body -->
                                                    <div class="modal-body">
                                                        <!-- User Details -->
                                                        <div class="user-details mb-4">
                                                            <h6 class="text-primary">User Details</h6>
                                                            <p style="color: black;" id="userDetails"></p>
                                                        </div>
                                        
                                                        <!-- Product Details -->
                                                        <div class="product-details mb-4">
                                                            <h6 class="text-primary">Product Details</h6>
                                                            <div id="productDetails">
                                                                <!-- Product information will be dynamically added here -->
                                                            </div>
                                                        </div>
                                        
                                                        <!-- Address Details -->
                                                        <div class="address-details mb-4">
                                                            <h6 class="text-primary">Address Details</h6>
                                                            <p style="color: black;" id="addressDetails">
                                                                <!-- Address information will be dynamically added here -->
                                                            </p>
                                                        </div>
                                        
                                                        <!-- Order Details -->
                                                        <div class="order-details mb-4">
                                                            <h6 class="text-primary">Order Details</h6>
                                                            <p style="color: black;" id="orderDetails"></p>
                                                        </div>
                                                    </div>
                                        
                                                    <!-- Modal Footer -->
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" onclick="closeOrderDetailsModal()">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                <% }) %>
                            </tbody>
                            
                        </table>

                        <!-- Pagination Controls -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                <% } %>
                                <% for (let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>

                    <% } else { %>
                        <h1>NO ORDERS FOUND</h1>
                    <% } %> 
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
     async function generateLedger() {
        try {
            const response = await fetch('/generateLedger', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);

                // Create a link to download the file
                const a = document.createElement('a');
                a.href = url;
                a.download = 'ledger.csv'; // File name for download
                a.click();

                // Clean up
                window.URL.revokeObjectURL(url);
                a.remove();
            } else {
                alert('Failed to generate the ledger. Please try again.');
            }
        } catch (error) {
            console.error('Error generating ledger:', error);
            alert('An error occurred while generating the ledger.');
        }
    }

function updateOrderStatus(orderId, status) {
    Swal.fire({
        title: 'Are you sure?',
        text: `You are about to change the order status to ${status}.`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, update it!',
        cancelButtonText: 'No, cancel!',
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/updateOrderStatus', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId, status })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Updated!',
                        'The order status has been updated.',
                        'success'
                    ).then(()=>{
                    location.reload();
                })
                } else {
                    Swal.fire(
                        'Failed!',
                        'There was an issue updating the order status.',
                        'error'
                    );
                }
            })
            .catch(error => console.error('Error updating order status:', error));
        }
    });
}

//  cancel the order 
function cancelOrder(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You are about to cancel this order.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it!',
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/cancelOrder', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status=='success') {
                    Swal.fire({
                        icon:'success',
                        text:data.message
                    }).then(()=>{
                    location.reload();
                })
                } else {
                    Swal.fire(
                        'Failed!',
                        'There was an issue cancelling the order.',
                        'error'
                    );
                }
            })
            .catch(error => console.log('Error cancelling order:', error));
        }
    });
}

function viewReturnRequest(orderId) {
    window.sessionStorage.setItem('order-id',orderId)
    fetch(`/admin/getReturnRequest/${orderId}`,{
        method:'get'
    })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                document.getElementById('returnRequestMessage').textContent = data.returnRequest;
                document.getElementById('returnRequestModal').style.display = 'block';
            } else {
                Swal.fire({
                    text:data.message
                }).then(()=>{
                    location.reload();
                })
            }
        })
        .catch(error => {
           Swal.fire({
            icon:'error',
            text:data.message
           })
        });
}

function viewReturnAProductRequest(orderId,productId) {    
    window.sessionStorage.setItem('order-id',orderId)
    window.sessionStorage.setItem('product-item',productId)
    fetch(`/admin/getReturnAProductRequest/${orderId}/${productId}`,{
        method:'get',
        headers: {
            'Content-Type': 'application/json', 
        }
    })
        .then(response => response.json())
        .then(data => {            
            if (data.status == 'success') {                
                document.getElementById('returnAProductRequestMessage').textContent = data.returnRequest;
                document.getElementById('returnAProductRequestModal').style.display = 'block';
            } else {
                Swal.fire({
                    text:data.message
                })
            }
        })
        .catch(error => {
           Swal.fire({
            icon:'error',
            text:data.message
           })
        });
}

function closeReturnRequestModal() {
    document.getElementById('returnRequestModal').style.display = 'none';
    document.getElementById('returnAProductRequestModal').style.display= 'none';
}

function acceptReturnRequest() {
    let orderId=window.sessionStorage.getItem('order-id')
    fetch(`/admin/acceptReturnRequest/${orderId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            Swal.fire({
                icon:'success',
                text:data.message
            }).then(()=>{
                window.location.href="/admin/orders"
        })
            closeReturnRequestModal();
        } else {
            Swal.fire({
                icon:'error',
                text:data.message
            })
        }
    })
    .catch(error => {
        Swal.fire({
            icon:'error',
            text:data.message
        })
    });
}

function rejectReturnRequest() {
    let orderId=window.sessionStorage.getItem('order-id')
    fetch(`/admin/rejectReturnRequest/${orderId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            Swal.fire({
                icon:'success',
                text:data.message
            }).then(()=>{
                window.location.href="/admin/orders"
        })
            closeReturnRequestModal();
            // location.reload(); 
        } else {
            Swal.fire({
                icon:'error',
                text:data.message
            })
        }
    })
    .catch(error => {
        Swal.fire({
            icon:'error',
            text:data.message
        })
    });
}


function acceptAProductReturnRequest() {
    let orderId = window.sessionStorage.getItem('order-id');
    let productId = window.sessionStorage.getItem('product-item');
    
    fetch(`/admin/acceptAProductReturnRequest/${orderId}/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            Swal.fire({
                icon: 'success',
                text: data.message
            }).then(() => {
                window.location.href = "/admin/orders";
            });
            closeReturnRequestModal();
        } else {
            Swal.fire({
                icon: 'error',
                text: data.message
            });
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            text: 'An error occurred. Please try again.'
        });
    });
}

function rejectAProductReturnRequest() {
    let orderId = window.sessionStorage.getItem('order-id');
    let productId = window.sessionStorage.getItem('product-item');
    
    fetch(`/admin/rejectAProductReturnRequest/${orderId}/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            Swal.fire({
                icon: 'success',
                text: data.message
            }).then(() => {
                window.location.href = "/admin/orders";
            });
            closeReturnRequestModal();
        } else {
            Swal.fire({
                icon: 'error',
                text: data.message
            });
        }
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            text: 'An error occurred. Please try again.'
        });
    });
}



function viewOrderDetails(orderId) {
    fetch(`/admin/orderDetails/${orderId}`)
        .then(response => response.json())
        .then(data => {     
            console.log('data',data);
              
            const order = data.order;
            const address = data.address;     
            // Populate user details
            const userDetails = `
                <strong>Name:</strong> ${order.userId.name || 'N/A'}<br>
                <strong>Email:</strong> ${order.userId.email || 'N/A'}<br>
            `;
            document.getElementById('userDetails').innerHTML = userDetails;

            // Populate product details
            const productDetails = order.products.map(product => `
                <div class="product-card">
                    <img src="/uploads/${product.productId ? product.productId.image[0] : 'default_image_url.jpg'}" alt="${product.productId ? product.productId.pname : 'Product'}">
                    <div class="product-info">
                        <h6>${product.productId ? product.productId.pname : 'Unknown Product'}</h6>
                        <p><strong>Quantity:</strong> ${product.quantity}</p>
                        <p><strong>Price:</strong> â‚¹${product.price}</p>
                        <p><strong>status:</strong> ${product.orderStatus}</p>

                    </div>
                </div>
            `).join('');
            document.getElementById('productDetails').innerHTML = productDetails;

             // Populate address details
             document.getElementById('addressDetails').innerHTML = `
                ${address.street}, ${address.city}, 
                ${address.state} - ${address.zipcode}<br>phone:${address.phone}
            `;

            // Populate order details
            const orderDetails = `
                <strong>Order ID:</strong> ${order._id}<br>
                <strong>Status:</strong> ${order.orderStatus}<br>
                <strong>Created At:</strong> ${new Date(order.createdAt).toLocaleString()}<br>
                <strong>payment method:</strong> ${order.paymentMethod}<br>
                <strong>Discount:</strong> â‚¹${order.discount}<br>
                <strong>Delivery charge:</strong>â‚¹50<br>
                <strong>Total Price:</strong> â‚¹${order.totalPrice.toFixed(2)}<br>
            `;
            document.getElementById('orderDetails').innerHTML = orderDetails;

            // Show the modal
            document.getElementById('orderDetailsModal').style.display = 'block';
        })
        .catch(err => {
            console.error('Error fetching order details:', err);
        });
}

function closeOrderDetailsModal() {
    document.getElementById('orderDetailsModal').style.display = 'none';
}

</script>
</body>
